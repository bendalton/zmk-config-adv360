
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define WINDOWS 1
#define NAV   2
#define NUMBERS   3
#define SYMBOL   4
#define CONTROL   5


/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&gresc>;
        };
		combo_tab {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&kp TAB>;
        };
		combo_quote {
            timeout-ms = <50>;
            key-positions = <45 46>;
            bindings = <&kp SQT>;
        };
		// combo_cmdenter {
        //     timeout-ms = <80>;
        //     key-positions = <49 54>;
        //     bindings = <&kp LG(RET)>;
        // };
    };
};


/ {
	behaviors {
			hm: homerow_mods {
					compatible = "zmk,behavior-hold-tap";
					label = "HOMEROW_MODS";
					#binding-cells = <2>;
					tapping-term-ms = <150>;
					quick_tap_ms = <350>;
					flavor = "tap-preferred";
					bindings = <&kp>, <&kp>;
			};
	};
};

/ {
    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &mo CONTROL                                                    &mo CONTROL &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS
 &kp TAB &kp Q &kp W &kp E &kp R &kp T &none                                                            &none &kp Y &kp U &kp I &kp O &kp P &kp BSLH
 &kp ESC &kp A &kp S &kp D &kp F &kp G &none                                                            &kp LCTRL &kp LALT &none &none &kp LGUI &kp RCTRL &none &kp H &kp J &kp K &kp L &kp SEMI &kp SQT
 &kp LSHFT &lt CONTROL Z &hm LCTRL X &hm LALT C &hm LGUI V &kp B &none &none &kp HOME &none             &none &kp PG_UP &none &none &kp N &hm LGUI M &hm LALT COMMA &hm LCTRL DOT &kp FSLH &kp RSHFT
 &mo NUMBERS &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT &hm LSHFT DEL &hm LGUI RET &kp END                               &mo NUMBERS &lt NAV SPACE &hm LSHFT BSPC &kp UP &kp DOWN &kp LBKT &kp RBKT &mo NUMBERS
            >;
        };

        windows {
            bindings = <
 &trans &trans &trans &trans &trans &trans &trans                           &trans &trans &trans &trans &trans &trans &trans
 &trans &trans &trans &trans &trans &trans &trans                           &trans &trans &trans &trans &trans &trans &trans
 &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans      &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
 &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans      &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
 &trans &trans &trans &trans &trans &trans &hm LCTRL RET &trans             &trans &trans &trans &trans &trans &trans &trans &trans
            >;
        };

         nav {
            bindings = <
 &none &none &none &none &none &none &kp K_MUTE                           &none &none &none &none &none &none &none
 &none &none &none &none &none &none &kp C_VOL_UP                           &none &none &none &none &none &none &none
 &none &none &none &none &none &none &kp C_VOL_DN &none &none &none         &none &none &none &none &kp LEFT &kp DOWN &kp UP &kp RIGHT &none &none
 &none &none &none &none &none &none &none &none &none &none         &none &none &none &none &kp LG((LBRC)) &kp LA(LS(DOWN)) &kp LA(LS(UP)) &kp LG((RBRC)) &none &none
 &none &none &none &none &none             &none &none &none         &none &none &none             &none &none &none &none &none
            >;
        };


        numbers {
            bindings = <
 &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &tog 2 &mo 3 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
 &kp TAB &kp Q &kp W &kp E &kp R &kp T &none &none &kp Y &kp U &kp I &kp O &kp P &kp BSLH
 &kp EQUAL &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &tog 2 &mo 3 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS
 &kp LSHFT &kp Z &kp X &kp C &kp V &kp B &none &none &kp HOME &none &none &kp PG_UP &none &none &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp RSHFT
 &trans &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT &kp BSPC &kp DEL &kp END &kp PG_DN &kp ENTER &kp SPACE &kp UP &kp DOWN &kp LBKT &kp RBKT &trans
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &trans &mo 3 &kp N6 &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp MINUS
 &kp TAB &kp Q &kp W &kp E &kp R &kp T &none &none &kp Y &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MINUS &kp BSLH
 &kp ESC &kp A &kp S &kp D &kp F &kp G &none &kp LCTRL &kp LALT &none &none &kp LGUI &kp RCTRL &none &kp H &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS &kp SQT
 &kp LSHFT &kp Z &kp X &kp C &kp V &kp B &none &none &kp HOME &none &none &kp PG_UP &none &none &kp N &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_ENTER &kp RSHFT
 &mo 1 &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT &kp BSPC &kp DEL &kp END &kp PG_DN &kp ENTER &kp KP_N0 &kp UP &kp DOWN &kp KP_DOT &kp RBKT &mo 1
            >;
        };

        CONTROL {
            bindings = <
 &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
 &none &tog WINDOWS &none &none &none &none &bootloader &bootloader &none &none &none &none &none &none
 &none &none &none &none &none &none &none &bt BT_CLR &none &none &none &bt BT_CLR &bt BT_CLR &none &none &none &none &none &none &none
 &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none &none
 &none &none &none &bl BL_INC &bl BL_DEC &rgb_ug RGB_TOG &bl BL_TOG &none &none &bl BL_TOG &rgb_ug RGB_TOG &bl BL_INC &bl BL_DEC &none &none &none
            >;
        };

    };
};
// nav {
//             bindings = <
//  &none &none &none &none &none &none &none                           &none &none &none &none &none &none &none
//  &none &none &none &none &none &none &none                           &none &none &none &none &none &none &none
//  &none &none &none &none &none &none &none &none &none &none         &none &none &none &none &none &none &none &none &none &none
//  &none &none &none &none &none &none &none &none &none &none         &none &none &none &none &none &none &none &none &none &none
//  &none &none &none &none &none             &none &none &none         &none &none &none             &none &none &none &none &none
        //     >;
        // };
